name: Release Pipeline
on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: api
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build and push Streamlit image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: streamlit
          push: true
          tags: ${{ steps.meta.outputs.tags }}-streamlit
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.release.tag_name }}
          release_name: Release ${{ github.event.release.tag_name }}
          body: |
            ## ðŸš€ Clinical Churn & CLV Prediction Release ${{ github.event.release.tag_name }}
            
            ### What's New
            - Enhanced business-focused dashboard
            - Improved model performance
            - Docker containerization
            - CI/CD pipeline automation
            
            ### Docker Images
            - API: `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}`
            - Streamlit: `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}-streamlit`
            
            ### Quick Start
            ```bash
            docker compose up --build
            ```
            
            ### Services
            - API: http://localhost:8000
            - Dashboard: http://localhost:8501
            - MLflow: http://localhost:8080
          draft: false
          prerelease: false 
      - name: Deploy with Docker Compose
        run: |
          echo "ðŸš€ Deploying with Docker Compose..."
          docker compose up --build 